:: default : yabai -m config status_bar_background_color 0xff202020

.blacklist [
    "iTerm2"
 ]

# focus window
cmd + shift - h : yabai -m window --focus west
cmd + shift - j : yabai -m window --focus south
cmd + shift - k : yabai -m window --focus north
cmd + shift - l : yabai -m window --focus east

# toggle fullscreen
cmd + shift - f : yabai -m window --toggle zoom-fullscreen

# open browser
cmd - i : open -na "Google Chrome" --args --new-window
cmd + shift - i : open -na "Google Chrome" --args --incognito

cmd + shift - p : yabai -m space --focus prev
cmd + shift - n : yabai -m space --focus next

# zen mode (cmd - ;)
:: zen @ : yabai -m config status_bar_background_color 0xffBE4F45
cmd - 0x29 ; zen

:: zenwindow @ : yabai -m config status_bar_background_color 0xff24CCAA

:: zenspace @ : yabai -m config status_bar_background_color 0xff0081C1
:: zenspaceq @ : yabai -m config status_bar_background_color 0xffE2E4E6

zen, zenspace < 0x24 ; zenwindow # <enter>
zen, zenwindow < 0x31 ; zenspace # <space>
cmd + shift - 0x24 ; zenwindow # cmd + shift - <enter>

cmd + shift - 0x31 ; zenspaceq # cmd + shift - <space>

# set insertion point in focused container
zen < alt - h : yabai -m window --insert west
zen < alt - j : yabai -m window --insert south
zen < alt - k : yabai -m window --insert north
zen < alt - l : yabai -m window --insert east

# rotate tree
zen < r : yabai -m space --rotate 90

# mirror tree y-axis
zen < y : yabai -m space --mirror y-axis

# mirror tree x-axis
zen < alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
zen < alt - a : yabai -m space --toggle padding; yabai -m space --toggle gap

# toggle window parent zoom
zen < d : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
zen < f : yabai -m window --toggle zoom-fullscreen

# toggle window border
zen < alt + shift - b : yabai -m window --toggle border

# toggle window split type
zen < alt - e : yabai -m window --toggle split

# focus window
zenwindow < h : yabai -m window --focus west
zenwindow < j : yabai -m window --focus south
zenwindow < k : yabai -m window --focus north
zenwindow < l : yabai -m window --focus east

# swap window
zenwindow < shift - h : yabai -m window --swap west
zenwindow < shift - j : yabai -m window --swap south
zenwindow < shift - k : yabai -m window --swap north
zenwindow < shift - l : yabai -m window --swap east

# move window
zenwindow < ctrl - h : yabai -m window --warp west
zenwindow < ctrl - j : yabai -m window --warp south
zenwindow < ctrl - k : yabai -m window --warp north
zenwindow < ctrl - l : yabai -m window --warp east

# cycle all windows on space backwards by coordinate
zenwindow < n : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | reverse | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"

# cycle all windows on space backwards by coordinate
zenwindow < p : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"

# balance size of windows
zenwindow < 0x18 : yabai -m space --balance

# increase window size
zenwindow < a : yabai -m window --resize left:-20:0
zenwindow < s : yabai -m window --resize bottom:0:20
zenwindow < w : yabai -m window --resize top:0:-20
zenwindow < d : yabai -m window --resize right:20:0

# decrease window size
zenwindow < shift - a : yabai -m window --resize left:20:0
zenwindow < shift - s : yabai -m window --resize bottom:0:-20
zenwindow < shift - w : yabai -m window --resize top:0:20
zenwindow < shift - d : yabai -m window --resize right:-20:0

zenwindow < z ; zen

# float / unfloat window and center on screen
zenwindow < t : yabai -m window --toggle float;\
          yabai -m window --grid 4:4:1:1:2:2

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
zenspace < u : yabai -m space --create && \
  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
  yabai -m window --space "${index}" && \
  yabai -m space --focus "${index}"

# create desktop and follow focus - uses jq for parsing json (brew install jq)
zenspace < i : yabai -m space --create && \
  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
  yabai -m space --focus "${index}"

# destroy desktop
zenspace < q : yabai -m space --destroy

# fast focus desktop
zenspace < 0x31 : yabai -m space --focus recent # <space>
zenspace < h : yabai -m space --focus 1
zenspace < j : yabai -m space --focus 2
zenspace < k : yabai -m space --focus 3
zenspace < l : yabai -m space --focus 4
zenspace < 0x29 : yabai -m space --focus 5 # ;
zenspace < 0x27 : yabai -m space --focus 6 # '
zenspace < n : yabai -m space --focus 7
zenspace < m : yabai -m space --focus 8
zenspace < 0x2B : yabai -m space --focus 9 # ,
zenspace < 0x2F : yabai -m space --focus 10 # .

# send window to desktop and follow focus
zenspace < shift - 0x31 : yabai -m window --space recent; yabai -m space --focus recent # <space>
zenspace < shift - h : yabai -m window --space  1; yabai -m space --focus 1
zenspace < shift - j : yabai -m window --space  2; yabai -m space --focus 2
zenspace < shift - k : yabai -m window --space  3; yabai -m space --focus 3
zenspace < shift - l : yabai -m window --space  4; yabai -m space --focus 4
zenspace < shift - 0x29 : yabai -m window --space  5; yabai -m space --focus 5 # shift - ;
zenspace < shift - 0x27 : yabai -m window --space  6; yabai -m space --focus 6 # shift - '
zenspace < shift - n : yabai -m window --space  7; yabai -m space --focus 7
zenspace < shift - m : yabai -m window --space  8; yabai -m space --focus 8
zenspace < shift - 0x2B : yabai -m window --space  9; yabai -m space --focus 9 # shift - ,
zenspace < shift - 0x2F : yabai -m window --space 10; yabai -m space --focus 10 # shift - .

zenspace < z ; zen

# destroy desktop
zenspaceq < q : yabai -m space --destroy ; skhd --key "escape"
# fast focus desktop
zenspaceq < 0x31 : yabai -m space --focus recent ; skhd --key "escape" # <space>
zenspaceq < h : yabai -m space --focus 1 ; skhd --key "escape"
zenspaceq < j : yabai -m space --focus 2 ; skhd --key "escape"
zenspaceq < k : yabai -m space --focus 3 ; skhd --key "escape"
zenspaceq < l : yabai -m space --focus 4 ; skhd --key "escape"
zenspaceq < 0x29 : yabai -m space --focus 5 ; skhd --key "escape" # ;
zenspaceq < 0x27 : yabai -m space --focus 6 ; skhd --key "escape" # '
zenspaceq < n : yabai -m space --focus 7 ; skhd --key "escape"
zenspaceq < m : yabai -m space --focus 8 ; skhd --key "escape"
zenspaceq < 0x2B : yabai -m space --focus 9 ; skhd --key "escape" # ,
zenspaceq < 0x2F : yabai -m space --focus 10 ; skhd --key "escape" # .

# send window to desktop and follow focus
zenspaceq < shift - 0x31 : yabai -m window --space recent; yabai -m space --focus recent ; skhd --key "escape" # shift - <space>
zenspaceq < shift - h : yabai -m window --space  1; yabai -m space --focus 1 ; skhd --key "escape"
zenspaceq < shift - j : yabai -m window --space  2; yabai -m space --focus 2 ; skhd --key "escape"
zenspaceq < shift - k : yabai -m window --space  3; yabai -m space --focus 3 ; skhd --key "escape"
zenspaceq < shift - l : yabai -m window --space  4; yabai -m space --focus 4 ; skhd --key "escape"
zenspaceq < shift - 0x29 : yabai -m window --space  5; yabai -m space --focus 5 ; skhd --key "escape" # shift - ;
zenspaceq < shift - 0x27 : yabai -m window --space  6; yabai -m space --focus 6 ; skhd --key "escape" # shift - '
zenspaceq < shift - n : yabai -m window --space  7; yabai -m space --focus 7 ; skhd --key "escape"
zenspaceq < shift - m : yabai -m window --space  8; yabai -m space --focus 8 ; skhd --key "escape"
zenspaceq < shift - 0x2B : yabai -m window --space  9; yabai -m space --focus 9 ; skhd --key "escape" # shift - ,
zenspaceq < shift - 0x2F : yabai -m window --space 10; yabai -m space --focus 10 ; skhd --key "escape" # shift - .

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
zenspaceq < u : yabai -m space --create && \
  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
  yabai -m window --space "${index}" && \
  yabai -m space --focus "${index}" ; \
  skhd --key "escape"

# create desktop and follow focus - uses jq for parsing json (brew install jq)
zenspaceq < i : yabai -m space --create && \
  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
  yabai -m space --focus "${index}" ; \
  skhd --key "escape"

zenspaceq < 0x24 : yabai -m display --focus recent ; skhd --key "escape" # <cr>

zen, zenwindow, zenspace, zenspaceq < escape ; default
